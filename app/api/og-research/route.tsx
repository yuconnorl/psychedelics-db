/* eslint-disable @next/next/no-img-element */
import { ImageResponse } from 'next/og'
import { NextRequest } from 'next/server'

// Route segment config
export const runtime = 'edge'

export async function GET(request: NextRequest) {
  try {
    const contentType = 'image/png'
    const { searchParams } = new URL(request.url)

    const hasTitle = searchParams.has('title')
    const title = hasTitle ? searchParams.get('title') : 'Research'

    const cormorantUpright = await fetch(
      new URL('public/fonts/cormorant-upright-bold.ttf', import.meta.url),
    )

    const roboto = await fetch(
      new URL('public/fonts/roboto-light.ttf', import.meta.url),
    )

    if (!cormorantUpright.ok) {
      throw new Error('Failed to fetch the font file')
    }

    const cormorantUprightData = await cormorantUpright.arrayBuffer()
    const robotoData = await roboto.arrayBuffer()

    return new ImageResponse(
      (
        <div
          style={{
            height: '100%',
            width: '100%',
            display: 'flex',
            flexDirection: 'column',
            position: 'relative',
            backgroundColor: 'white',
          }}
        >
          <div tw='flex flex-col absolute bottom-16 left-12'>
            <div tw='flex relative flex-col mb-8'>
              <svg
                viewBox='0 0 166 81'
                fill='#292929'
                xmlns='http://www.w3.org/2000/svg'
                width='56'
              >
                <path d='M165.736 40.5021C165.246 40.9421 164.719 41.3492 164.259 41.8167C150.329 56.0683 134.031 67.2836 114.636 74.4891C103.892 78.4769 92.7357 80.6331 81.0952 80.3746C70.3096 80.1326 59.9724 77.8939 50.0597 74.0821C30.617 66.607 14.2592 55.2102 0.436445 40.6451C0.334807 40.5351 0.257084 40.4031 0 40.0621C2.57682 37.5484 5.08788 34.9082 7.81417 32.4715C19.2993 22.1912 32.1116 13.6436 46.7834 7.59863C59.3327 2.42274 72.4261 -0.492478 86.2608 0.0685636C97.7997 0.536099 108.765 3.28081 119.233 7.70314C136.781 15.1122 151.793 25.6455 164.564 38.9345C164.911 39.292 165.335 39.589 165.724 39.9135C165.736 40.1061 165.736 40.3041 165.736 40.5021ZM82.9068 8.94623C64.2831 8.94073 48.9596 23.0163 48.9238 40.1556C48.8879 57.2838 64.1635 71.3979 82.8111 71.4639C101.471 71.5299 116.902 57.3553 116.878 40.1721C116.848 23.0273 101.536 8.95173 82.9068 8.94623ZM152.624 40.1996C142.718 31.1459 131.902 23.5883 119.239 17.6314C129.056 32.8015 129.056 47.6196 119.245 62.7733C131.92 56.8108 142.736 49.2422 152.624 40.1996ZM13.1771 40.2051C23.0898 49.2587 33.8993 56.8163 46.5562 62.7733C36.7332 47.6031 36.7392 32.785 46.5622 17.6094C33.8993 23.6433 23.0659 31.1789 13.1771 40.2051Z' />
                <path d='M68.3428 40.2009C68.3428 32.7588 74.8356 26.8074 82.9428 26.8184C91.02 26.8294 97.471 32.8138 97.4531 40.2834C97.4352 47.6319 90.9423 53.5889 82.9368 53.5999C74.8476 53.6054 68.3428 47.6374 68.3428 40.2009ZM87.7497 40.2449C87.7795 37.8962 85.5136 35.7731 82.9428 35.7455C80.3899 35.718 78.0821 37.8027 78.0522 40.1624C78.0223 42.5111 80.2882 44.6342 82.8591 44.6617C85.406 44.6947 87.7138 42.6101 87.7497 40.2449Z' />
              </svg>
              <svg
                viewBox='0 0 166 81'
                fill='#29292980'
                xmlns='http://www.w3.org/2000/svg'
                width='56'
                style={{ position: 'absolute', top: '13px' }}
              >
                <path d='M165.736 40.5021C165.246 40.9421 164.719 41.3492 164.259 41.8167C150.329 56.0683 134.031 67.2836 114.636 74.4891C103.892 78.4769 92.7357 80.6331 81.0952 80.3746C70.3096 80.1326 59.9724 77.8939 50.0597 74.0821C30.617 66.607 14.2592 55.2102 0.436445 40.6451C0.334807 40.5351 0.257084 40.4031 0 40.0621C2.57682 37.5484 5.08788 34.9082 7.81417 32.4715C19.2993 22.1912 32.1116 13.6436 46.7834 7.59863C59.3327 2.42274 72.4261 -0.492478 86.2608 0.0685636C97.7997 0.536099 108.765 3.28081 119.233 7.70314C136.781 15.1122 151.793 25.6455 164.564 38.9345C164.911 39.292 165.335 39.589 165.724 39.9135C165.736 40.1061 165.736 40.3041 165.736 40.5021ZM82.9068 8.94623C64.2831 8.94073 48.9596 23.0163 48.9238 40.1556C48.8879 57.2838 64.1635 71.3979 82.8111 71.4639C101.471 71.5299 116.902 57.3553 116.878 40.1721C116.848 23.0273 101.536 8.95173 82.9068 8.94623ZM152.624 40.1996C142.718 31.1459 131.902 23.5883 119.239 17.6314C129.056 32.8015 129.056 47.6196 119.245 62.7733C131.92 56.8108 142.736 49.2422 152.624 40.1996ZM13.1771 40.2051C23.0898 49.2587 33.8993 56.8163 46.5562 62.7733C36.7332 47.6031 36.7392 32.785 46.5622 17.6094C33.8993 23.6433 23.0659 31.1789 13.1771 40.2051Z' />
                <path d='M68.3428 40.2009C68.3428 32.7588 74.8356 26.8074 82.9428 26.8184C91.02 26.8294 97.471 32.8138 97.4531 40.2834C97.4352 47.6319 90.9423 53.5889 82.9368 53.5999C74.8476 53.6054 68.3428 47.6374 68.3428 40.2009ZM87.7497 40.2449C87.7795 37.8962 85.5136 35.7731 82.9428 35.7455C80.3899 35.718 78.0821 37.8027 78.0522 40.1624C78.0223 42.5111 80.2882 44.6342 82.8591 44.6617C85.406 44.6947 87.7138 42.6101 87.7497 40.2449Z' />
              </svg>
              <svg
                viewBox='0 0 166 81'
                fill='#29292940'
                xmlns='http://www.w3.org/2000/svg'
                width='56'
                style={{ position: 'absolute', top: '26px' }}
              >
                <path d='M165.736 40.5021C165.246 40.9421 164.719 41.3492 164.259 41.8167C150.329 56.0683 134.031 67.2836 114.636 74.4891C103.892 78.4769 92.7357 80.6331 81.0952 80.3746C70.3096 80.1326 59.9724 77.8939 50.0597 74.0821C30.617 66.607 14.2592 55.2102 0.436445 40.6451C0.334807 40.5351 0.257084 40.4031 0 40.0621C2.57682 37.5484 5.08788 34.9082 7.81417 32.4715C19.2993 22.1912 32.1116 13.6436 46.7834 7.59863C59.3327 2.42274 72.4261 -0.492478 86.2608 0.0685636C97.7997 0.536099 108.765 3.28081 119.233 7.70314C136.781 15.1122 151.793 25.6455 164.564 38.9345C164.911 39.292 165.335 39.589 165.724 39.9135C165.736 40.1061 165.736 40.3041 165.736 40.5021ZM82.9068 8.94623C64.2831 8.94073 48.9596 23.0163 48.9238 40.1556C48.8879 57.2838 64.1635 71.3979 82.8111 71.4639C101.471 71.5299 116.902 57.3553 116.878 40.1721C116.848 23.0273 101.536 8.95173 82.9068 8.94623ZM152.624 40.1996C142.718 31.1459 131.902 23.5883 119.239 17.6314C129.056 32.8015 129.056 47.6196 119.245 62.7733C131.92 56.8108 142.736 49.2422 152.624 40.1996ZM13.1771 40.2051C23.0898 49.2587 33.8993 56.8163 46.5562 62.7733C36.7332 47.6031 36.7392 32.785 46.5622 17.6094C33.8993 23.6433 23.0659 31.1789 13.1771 40.2051Z' />
                <path d='M68.3428 40.2009C68.3428 32.7588 74.8356 26.8074 82.9428 26.8184C91.02 26.8294 97.471 32.8138 97.4531 40.2834C97.4352 47.6319 90.9423 53.5889 82.9368 53.5999C74.8476 53.6054 68.3428 47.6374 68.3428 40.2009ZM87.7497 40.2449C87.7795 37.8962 85.5136 35.7731 82.9428 35.7455C80.3899 35.718 78.0821 37.8027 78.0522 40.1624C78.0223 42.5111 80.2882 44.6342 82.8591 44.6617C85.406 44.6947 87.7138 42.6101 87.7497 40.2449Z' />
              </svg>
            </div>
            <div
              tw='leading-tight mb-5 text-4xl max-w-3xl font-medium'
              style={{ fontFamily: 'CormorantUpright' }}
            >
              {title}
            </div>
            <div tw='leading-tight text-sm' style={{ fontFamily: 'Roboto' }}>
              Research / Psychedelics Database
            </div>
          </div>
        </div>
      ),
      {
        width: 1200,
        height: 630,
        fonts: [
          {
            name: 'CormorantUpright',
            data: cormorantUprightData,
            style: 'normal',
          },
          {
            name: 'Roboto',
            data: robotoData,
            style: 'normal',
          },
        ],
      },
    )
  } catch (e: any) {
    console.log(`${e.message}`)
    return new Response(`Failed to generate the image`, {
      status: 500,
    })
  }
}
